tasks:
  # Layer 1: Base setup (2 parallel tasks)
  - id: setup-types
    title: Setup TypeScript types
    description: Create basic type definitions
    touches: []
    produces: [src/types/test.ts]
    requires: []
    estimatedLines: 15
    agentPrompt: Create src/types/test.ts with basic TypeScript type definitions export interface TestConfig { name string; enabled boolean; } export type TestMode = 'development' | 'production';

  - id: setup-utils
    title: Setup utility functions
    description: Create utility functions
    touches: []
    produces: [src/utils/test.ts]
    requires: []
    estimatedLines: 20
    agentPrompt: Create src/utils/test.ts with utility functions export function formatTestName(name string) { return `[TEST] ${name}`; } export function isTestMode() { return process.env.NODE_ENV === 'test'; }

  # Layer 2: Components that depend on Layer 1 (3 parallel tasks)
  - id: create-config-component
    title: Create configuration component
    description: Component that uses types and utils
    touches: []
    produces: [src/components/Config.ts]
    requires: [setup-types, setup-utils]
    estimatedLines: 25
    agentPrompt: Create src/components/Config.ts that imports TestConfig from @/types/test and formatTestName from @/utils/test, then exports a class Config that uses these types

  - id: create-logger-component
    title: Create logger component
    description: Logger that uses utils
    touches: []
    produces: [src/components/Logger.ts]
    requires: [setup-utils]
    estimatedLines: 20
    agentPrompt: Create src/components/Logger.ts that imports isTestMode from @/utils/test and exports a class Logger with a log method that prefixes messages in test mode

  - id: create-validator-component
    title: Create validator component
    description: Validator that uses types
    touches: []
    produces: [src/components/Validator.ts]
    requires: [setup-types]
    estimatedLines: 15
    agentPrompt: Create src/components/Validator.ts that imports TestConfig and TestMode from @/types/test and exports validation functions

  # Layer 3: Integration that uses everything (1 task)
  - id: create-main-integration
    title: Create main integration
    description: Main file that integrates all components
    touches: []
    produces: [src/main.ts]
    requires: [create-config-component, create-logger-component, create-validator-component]
    estimatedLines: 30
    agentPrompt: Create src/main.ts that imports and uses Config, Logger, and Validator from their respective components, demonstrating integration of all created modules
